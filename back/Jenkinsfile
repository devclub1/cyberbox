pipeline {
  agent {
    label 'master'
  }
  stages {
    stage('Install') {
      steps {
        dir(path: 'back') {
          sh 'npm install'
        }
      }
    }
    stage('Test') {
      steps {
        dir(path: 'back') {
          sh 'npm run coverage'
        }
      }
    }
    stage('Publish Results') {
      parallel {
        stage('Publish Reports') {
          environment {
            CODECOV_TOKEN = credentials('codecov_token')
          }
          steps {
            dir(path: 'back') {
              sh 'curl -s https://codecov.io/bash | bash -s - -t $CODECOV_TOKEN'
            }
          }
        }
        stage('Create Docker Image') {
          when {
            branch 'ts'
          }
          environment {
            DOCKER_IMAGE = ''
            DOCKERHUB_CREDENTIALS = 'dockerhub_token'
            REPOSITORY = 'axbg/cyberbox-back'
          }
          steps {
            dir(path: 'back') {
              script {
                DOCKER_IMAGE = docker.build REPOSITORY + ':latest'
                docker.withRegistry('', DOCKERHUB_CREDENTIALS) {
                  DOCKER_IMAGE.push()
                }
              }
            }
          }
        }
      }
    }
    stage('Cleanup') {
      when {
        branch 'ts'
      }
      environment {
        REPOSITORY = 'axbg/cyberbox-back'
      }
      steps {
        sh "docker rmi $REPOSITORY:latest" 
      }
    }
  }
  environment {
    HOME = '.'
  }
}